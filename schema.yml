$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "https://github.com/exelr/eddwise/schema.yml"

components:
  array:
    type: string
    pattern: "^\++\s*\.?[a-z0-9_]+$"
  map:
    type: string
    pattern: "^(\+*\s*\.?[a-z0-9_]+\s*->\s*)+\s*\+*\s*\.?[a-z0-9_]+"
  primitives:
    type: string
    enum:
      - int
      - int8
      - int16
      - int32
      - int64
      - uint
      - uint8
      - uint16
      - uint32
      - uint64
      - byte
      - bool
      - string
      - any
      - []byte

  field:
    anyOf:
      - $ref: '#/components/primitives'
      - $ref: '#/components/array'
      - $ref: '#/components/map'
      - type: string
        pattern: "\.[a-z0-9_]+"
      - $ref: '#/components/struct'
  struct:
    type: object
    patternProperties:
      ".*":
        $ref: '#/components/field'

required:
  - namespace
properties:
  namespace:
    type: string
  structs:
    type: object
    additionalProperties: false
    patternProperties:
      "^[a-z0-9_]+$":
        $ref: '#/components/struct'
  channels:
    type: object
    patternProperties:
      ".*":
        type: object
        additionalProperties: false
        anyOf:
          - required:
            - dual
          - required:
            - server
            - client
        properties:
          dual:
            type: array
            items:
              type: string
          server:
            type: array
            items:
              type: string
          client:
            type: array
            items:
              type: string
